name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ghcr.io/spbavarva/otel-frontend
      IMAGE_TAG: v${{ github.run_number }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: arn:aws:iam::412134929535:role/github-eks-deploy-role
          role-session-name: GitHubActionsSession
          role-duration-seconds: 3600

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t $IMAGE_NAME:$IMAGE_TAG ./src/frontend
          docker push $IMAGE_NAME:$IMAGE_TAG

      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

      - name: Deploy using Helm
        run: |
          set -e
          helm repo add open-telemetry https://open-telemetry.github.io/opentelemetry-helm-charts
          helm repo update
          kubectl create namespace otel-demo
          helm install opentelemetry-demo open-telemetry/opentelemetry-demo --namespace otel-demo

      - name: Verify Deployment
        run: |
          kubectl get all -n otel
          helm history otel-release -n otel
