name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: sbavarva/otel-frontend

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: arn:aws:iam::412134929535:role/github-eks-deploy-role
          role-session-name: GitHubActionsSession
          role-duration-seconds: 3600

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t $IMAGE_NAME:latest ./src/frontend
          docker push $IMAGE_NAME:latest

      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

      - name: Deploy using Helm
        run: |
          set -e
          helm repo add open-telemetry https://open-telemetry.github.io/opentelemetry-helm-charts
          helm repo update
          helm upgrade --install otel-release open-telemetry/opentelemetry-demo \
            --namespace otel \
            --create-namespace \
            --set frontend.image.repository=$IMAGE_NAME \
            --set frontend.image.tag=latest || {
              echo "Helm upgrade failed. Rolling back..."
              helm rollback otel-release
              exit 1
            }

      - name: Verify Deployment
        run: |
          kubectl get all -n otel
          helm history otel-release -n otel
